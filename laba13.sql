DECLARE
PROCEDURE GET_TEACHERS(PCODE TEACHER.PULPIT%TYPE) IS        
    CURSOR TEACHERS_CURSOR IS SELECT * FROM TEACHER WHERE PULPIT = PCODE;
    TEACHER_REC TEACHER%ROWTYPE;
    BEGIN
        FOR TEACHER_REC IN TEACHERS_CURSOR LOOP            
            DBMS_OUTPUT.PUT_LINE(TEACHERS_CURSOR%ROWCOUNT ||  '. ' ||  TEACHER_REC.PULPIT ||  ' ' ||  TEACHER_REC.TEACHER ||  ' ' ||  TEACHER_REC.TEACHER_NAME);
            END LOOP;
        END;
BEGIN 
    GET_TEACHERS('»—Ë“');
END;

SET SERVEROUTPUT ON;

DECLARE
    FUNCTION GET_NUM_TEACHERS(PCODE TEACHER.PULPIT%TYPE)
    RETURN NUMBER IS NUM_TEACHERS NUMBER;
    BEGIN        
        SELECT COUNT(*) INTO NUM_TEACHERS
        FROM TEACHER
        WHERE PULPIT = PCODE;
        RETURN NUM_TEACHERS;
    END;
BEGIN
    DBMS_OUTPUT.PUT_LINE(GET_NUM_TEACHERS('»—Ë“'));
END;

CREATE OR REPLACE PROCEDURE GET_TEACHERS_BY_FACULTY(FCODE FACULTY.FACULTY%TYPE)AS
    CURSOR TEACHER_CUR 
        IS SELECT T.TEACHER, T.TEACHER_NAME, T.PULPIT, T.SALARY, T.BIRTHDAY 
            FROM TEACHER T
            JOIN PULPIT ON T.PULPIT = PULPIT.PULPIT
            JOIN FACULTY ON FACULTY.FACULTY = PULPIT.FACULTY
            WHERE FACULTY.FACULTY = FCODE;
    C_TEACHER TEACHER.TEACHER%TYPE;
    C_TEACHER_NAME TEACHER.TEACHER_NAME%TYPE;
    C_PULPIT TEACHER.PULPIT%TYPE;
    C_SALARY TEACHER.SALARY%TYPE;
    C_BIRTHDAY TEACHER.BIRTHDAY%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('TEACHER TEACHER_NAME PULPIT SALARY BIRTHDAY');
    OPEN TEACHER_CUR;
    LOOP
        FETCH TEACHER_CUR INTO C_TEACHER, C_TEACHER_NAME, C_PULPIT, C_SALARY,C_BIRTHDAY;
        EXIT WHEN TEACHER_CUR%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(C_TEACHER || ' ' || C_TEACHER_NAME || ' ' || C_PULPIT || ' ' || C_SALARY || ' ' || C_BIRTHDAY);
    END LOOP;
    CLOSE TEACHER_CUR;
END;

SELECT * FROM FACULTY

BEGIN
    GET_TEACHERS_BY_FACULTY('»ƒËœ');
END;

CREATE OR REPLACE PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE)AS CURSOR SUBJECT_CUR IS SELECT * FROM SUBJECT WHERE PULPIT = PCODE; C_SUBJECT SUBJECT%ROWTYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('SUBJECT SUBJECT_NAME PULPIT');
    OPEN SUBJECT_CUR;
    FETCH SUBJECT_CUR INTO C_SUBJECT;
    WHILE SUBJECT_CUR%FOUND
    LOOP
        DBMS_OUTPUT.PUT_LINE(C_SUBJECT.SUBJECT || 
        ' ' ||
        C_SUBJECT.SUBJECT_NAME || 
        ' ' ||
        C_SUBJECT.PULPIT);
        FETCH SUBJECT_CUR INTO C_SUBJECT;
    END LOOP;
    CLOSE SUBJECT_CUR;
END GET_SUBJECTS;

BEGIN
    GET_SUBJECTS('»—Ë“');
END;

CREATE OR REPLACE FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE)
RETURN NUMBER AS Teacher_Count NUMBER(4);
BEGIN
    SELECT COUNT(*) INTO Teacher_Count FROM TEACHER T
        JOIN PULPIT ON T.PULPIT = PULPIT.PULPIT
        JOIN FACULTY ON FACULTY.FACULTY = PULPIT.FACULTY
        WHERE FACULTY.FACULTY = FCODE;
    RETURN Teacher_Count; 
    EXCEPTION
     WHEN OTHERS THEN RETURN -1;
END;

SELECT GET_NUM_TEACHERS('»›‘') FROM DUAL;

DECLARE 
    v_lol NUMBER(4);
BEGIN
    SELECT GET_NUM_TEACHERS('»›‘') INTO v_lol FROM DUAL;
    DBMS_OUTPUT.PUT_LINE(v_lol);
END;

CREATE OR REPLACE FUNCTION GET_NUM_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE)
RETURN NUMBER AS SUBJECT_COUNT NUMBER(4);
BEGIN
    SELECT COUNT(*) INTO SUBJECT_COUNT
    FROM SUBJECT
    WHERE PULPIT = PCODE;
    RETURN SUBJECT_COUNT;
    EXCEPTION
        WHEN OTHERS THEN RETURN -1;
END;

DECLARE 
    v_lol NUMBER(4);
BEGIN
    SELECT GET_NUM_SUBJECTS('»—Ë“') INTO v_lol FROM DUAL;
    DBMS_OUTPUT.PUT_LINE(v_lol);
END;

CREATE OR REPLACE PACKAGE TEACHERS AS
    PROCEDURE GET_TEACHERS_BY_FACULTY(FCODE FACULTY.FACULTY%TYPE);
    PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE);
    FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER;
    FUNCTION GET_NUM_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER;
END TEACHERS;

CREATE OR REPLACE PACKAGE BODY TEACHERS AS

    PROCEDURE GET_TEACHERS_BY_FACULTY(FCODE FACULTY.FACULTY%TYPE) AS
        CURSOR TEACHER_CUR IS 
            SELECT T.TEACHER, T.TEACHER_NAME, T.PULPIT, T.SALARY, T.BIRTHDAY 
            FROM TEACHER T
            JOIN PULPIT ON T.PULPIT = PULPIT.PULPIT
            JOIN FACULTY ON FACULTY.FACULTY = PULPIT.FACULTY
            WHERE FACULTY.FACULTY = FCODE;
        C_TEACHER TEACHER.TEACHER%TYPE;
        C_TEACHER_NAME TEACHER.TEACHER_NAME%TYPE;
        C_PULPIT TEACHER.PULPIT%TYPE;
        C_SALARY TEACHER.SALARY%TYPE;
        C_BIRTHDAY TEACHER.BIRTHDAY%TYPE;
    BEGIN
        DBMS_OUTPUT.PUT_LINE('TEACHER TEACHER_NAME PULPIT SALARY BIRTHDAY');
        OPEN TEACHER_CUR;
        LOOP
            FETCH TEACHER_CUR INTO C_TEACHER, C_TEACHER_NAME, C_PULPIT, C_SALARY, C_BIRTHDAY;
            EXIT WHEN TEACHER_CUR%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(C_TEACHER || ' ' || C_TEACHER_NAME || ' ' || C_PULPIT || ' ' || C_SALARY || ' ' || C_BIRTHDAY);
        END LOOP;
        CLOSE TEACHER_CUR;
    END GET_TEACHERS_BY_FACULTY;

    PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE) AS
        CURSOR SUBJECT_CUR IS 
            SELECT * FROM SUBJECT WHERE PULPIT = PCODE;
        C_SUBJECT SUBJECT%ROWTYPE;
    BEGIN
        DBMS_OUTPUT.PUT_LINE('SUBJECT SUBJECT_NAME PULPIT');
        OPEN SUBJECT_CUR;
        FETCH SUBJECT_CUR INTO C_SUBJECT;
        WHILE SUBJECT_CUR%FOUND LOOP
            DBMS_OUTPUT.PUT_LINE(C_SUBJECT.SUBJECT || ' ' || C_SUBJECT.SUBJECT_NAME || ' ' || C_SUBJECT.PULPIT);
            FETCH SUBJECT_CUR INTO C_SUBJECT;
        END LOOP;
        CLOSE SUBJECT_CUR;
    END GET_SUBJECTS;

    FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER AS
        TEACHER_COUNT NUMBER(4);
    BEGIN
        SELECT COUNT(*) INTO TEACHER_COUNT 
        FROM TEACHER T
        JOIN PULPIT ON T.PULPIT = PULPIT.PULPIT
        JOIN FACULTY ON FACULTY.FACULTY = PULPIT.FACULTY
        WHERE FACULTY.FACULTY = FCODE;
        RETURN TEACHER_COUNT;
    EXCEPTION
        WHEN OTHERS THEN
            RETURN -1;
    END GET_NUM_TEACHERS;

    FUNCTION GET_NUM_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER AS
        SUBJECT_COUNT NUMBER(4);
    BEGIN
        SELECT COUNT(*) INTO SUBJECT_COUNT
        FROM SUBJECT
        WHERE PULPIT = PCODE;
        RETURN SUBJECT_COUNT;
    EXCEPTION
        WHEN OTHERS THEN
            RETURN -1;
    END GET_NUM_SUBJECTS;

END TEACHERS;

DECLARE 
    V_TEACHER_COUNT NUMBER;
    V_SUBJECT_COUNT NUMBER;
BEGIN
    TEACHERS.GET_TEACHERS_BY_FACULTY('»›‘');
    TEACHERS.GET_SUBJECTS('»—Ë“');
    V_TEACHER_COUNT := TEACHERS.GET_NUM_TEACHERS('»›‘');
    DBMS_OUTPUT.PUT_LINE('NUMBER OF TEACHERS: ' || V_TEACHER_COUNT);
    V_SUBJECT_COUNT := TEACHERS.GET_NUM_SUBJECTS('»—Ë“');
    DBMS_OUTPUT.PUT_LINE('NUMBER OF SUBJECTS: ' || V_SUBJECT_COUNT);
END;